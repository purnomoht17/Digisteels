# Variabel untuk mempermudah testing
@hostname = http://localhost:5001/api
@token = 

###
# 1. REGISTER Pelanggan Baru
# (Jalankan ini sekali untuk membuat user baru)
###
POST {{hostname}}/pelanggan/register
Content-Type: application/json
Accept: application/json

{
  "email": "heru.purnomo@example.com",
  "password": "passwordpanjang123",
  "nama": "Heru Purnomo"
}

###
# 2. LOGIN Pelanggan
# (Jalankan ini setelah register untuk mendapatkan dan menyimpan token secara otomatis)
###
# @name loginRequest
POST {{hostname}}/pelanggan/login
Content-Type: application/json
Accept: application/json

{
  "email": "heru.purnomo@example.com",
  "password": "passwordpanjang123"
}

> {%
    client.global.set("token", response.body.data.token);
    client.log("Token berhasil disimpan: " + response.body.data.token);
%}

###
# 3. GET Data Pelanggan Saat Ini
# (Jalankan ini setelah login, token akan digunakan otomatis)
###
GET {{hostname}}/pelanggan/current
Accept: application/json
Authorization: {{token}}

###
# 4. UPDATE Data Pelanggan Saat Ini
# (Jalankan ini setelah login, Anda bisa mengubah nama atau email atau keduanya)
###
PATCH {{hostname}}/pelanggan/current
Content-Type: application/json
Accept: application/json
Authorization: {{token}}

{
  "nama": "Heru Purnomo Updated"
}

###
# 5. DELETE Akun Pelanggan
# (Jalankan ini untuk menghapus akun. Membutuhkan konfirmasi password di body)
###
DELETE {{hostname}}/pelanggan/current
Content-Type: application/json
Accept: application/json
Authorization: {{token}}

{
  "password": "passwordpanjang123"
}


###
# 6. LOGOUT Pelanggan
# (Jalankan ini paling terakhir, tidak perlu request body)
###
DELETE {{hostname}}/pelanggan/logout
Accept: application/json
Authorization: {{token}}